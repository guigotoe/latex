Bitacora Proyecto RNAseq de latex 2015

#################
#	23.03.2015	#
#################

Se inicio el preprocesamiento de los datos usando trimmomtic para realizar el trimming 
por calidad y eliminar las primeras 9pb de cada lectura. Se ejecuto el siguiente script:

for k in s1 s2 s3 s4 s5 s6 s7a s7b s8a s8b s9a s9b s10a s10b s11a s11b s12a s12b s13a s13b s14a s14b s15a s15b s16a s16b s17a s17b s18a s18b; do java -jar ~/Bin/trimmomatic-0.32.jar PE -threads 16 $k\r1.fq $k\r2.fq $k\r1_P.fq $k\r1_U.fq $k\r2_P.fq $k\r2_U.fq ILLUMINACLIP:TruSeq3-PE.fa:2:30:10 HEADCROP:12 LEADING:3 TRAILING:3 SLIDINGWINDOW:4:25 MINLEN:37 2>> trimmomatic.log; done &

En el archivo trimmomatic.log se almacena toda la informacion generada por este programa.

Goto!
#################
#	27.03.2015	#
#################

De acuerdo al analisis de calidad elaborado con la herramienta fastqc nos dimos cuenta que
se incremento considerablemente la calidad. Sin embargo Existe una anomala sobre-expresion de kmers al
final de las lecturas, 

Goto!
#################
#	30.03.2015	#
#################

Para todos los archivos generados por trimmomatic es decir: los pareados tanto forward como 
reverse: 1P y 2P asi como los huerfanos: 1U y 2U; se los filtro por ribosomales utilizando la
la herramienta ribopicker, y los scripts:

for k in s1r1 s7ar1 s10ar1 s13ar1; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s2r1 s7br1 s10br1 s13br1; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s3r1 s8ar1 s11ar1 s14ar1; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s4r1 s8br1 s11br1 s14br1; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s5r1 s9ar1 s12ar1 s15ar1; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s6r1 s9br1 s12br1 s15br1; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &

for k in s16ar1 s16br1 s17ar1 s17br1 s18ar1 s18br1; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &

for k in s1r2 s7ar2 s10ar2 s13ar2; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s2r2 s7br2 s10br2 s13br2; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s3r2 s8ar2 s11ar2 s14ar2; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s4r2 s8br2 s11br2 s14br2; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s5r2 s9ar2 s12ar2 s15ar2; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &
for k in s6r2 s9br2 s12br2 s15br2; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr; done &

for k in s16ar2 s16br2 s17ar2 s17br2 s18ar2 s18br2; do ribopicker.pl -f ./$k\_P.fq -id  $k\_P.rbpkr 2>>ribopicker.log; done &


for k in s1r1 s3r1 s5r1 s7ar1 s8ar1 s9ar1 s10ar1 s11ar1 s12ar1 s13ar1 s14ar1 s15ar1 s16ar1 s17ar1 s18ar1; do ribopicker.pl -f ./$k\_U.fq -id  $k\_U.rbpkr; done &
for k in s2r1 s4r1 s6r1 s7br1 s8br1 s9br1 s10br1 s11br1 s12br1 s13br1 s14br1 s15br1 s16br1 s17br1 s18br1; do ribopicker.pl -f ./$k\_U.fq -id  $k\_U.rbpkr; done &

for k in s1r2 s3r2 s5r2 s7ar2 s8ar2 s9ar2 s10ar2 s11ar2 s12ar2 s13ar2 s14ar2 s15ar2 s16ar2 s17ar2 s18ar2; do ribopicker.pl -f ./$k\_U.fq -id  $k\_U.rbpkr; done &
for k in s2r2 s4r2 s6r2 s7br2 s8br2 s9br2 s10br2 s11br2 s12br2 s13br2 s14br2 s15br2 s16br2 s17br2 s18br2; do ribopicker.pl -f ./$k\_U.fq -id  $k\_U.rbpkr; done &

Goto!
#################
#	31.03.2015	#
#################

Para Corregir el desbalance de secuencias generado por ribopicker a los archivos pareados 1P y 2P
se decidio correr otra vez trimmomatic, al menos en prueba para la libreria 10 con el siguiente script:

java -jar ~/Bin/trimmomatic-0.32.jar PE  s10G_1P.rbpkr_nonrrna.fq s10G_2P.rbpkr_nonrrna.fq s10G_1P.rbpkr_nonrrna_P.fq 1P.rbpkr_nonrrna_U.fq s10G_2P.rbpkr_nonrrna_P.fq s10G_2P.rbpkr_nonrrna_U.fq &

A demas de balancear las secuencias. El resultado fue
todo un exito, se generaron nuevamente los archivos pareados balanceados y nuevos archivos 
huerfanos los cuales van a ser concatenados con los anteriores para usos posteriores.

Se probo quitar la sobre-expresion anomala de kmers al final pero no fue exitosa, Sin embargo
no creo que sea mucho el sesgo que esto introduzca en los ensamblajes posteriores.  

Para dejar a punto todos los archivos... se ejecuto trimmomatic con los siguientes scripts:

for k in s1 s2 s3 s4 s5 s6 s7a s7b s8a s8b s9a s9b s10a s10b s11a s11b s12a s12b s13a s13b s14a s14b s15a s15b s16a s16b s17a s17b s18a s18b; do java -jar ~/Bin/trimmomatic-0.32.jar PE -threads 16 $k\r1_P.rbpkr_nonrrna.fq $k\r2_P.rbpkr_nonrrna.fq $k\F.fq $k\F_U.fq $k\R.fq $k\R_U.fq MINLEN:37; done &

Luego se concatenaron los huerfanos con el comando cat:

cat archivo1 archivo2 > archivo3:

for k in s1 s2 s3 s4 s5 s6 s7a s7b s8a s8b s9a s9b s10a s10b s11a s11b s12a s12b s13a s13b s14a s14b s15a s15b s16a s16b s17a s17b s18a s18b; do cat $k\F_U.fq $k\r1_U.rbpkr_nonrrna.fq > $k\Fu.fq && cat $k\R_U.fq $k\r2_U.rbpkr_nonrrna.fq > $k\Ru.fq && cat $k\r1_P.rbpkr_rrna.fq $k\r1_U.rbpkr_rrna.fq > $k\Frrna.fq && cat $k\r2_P.rbpkr_rrna.fq $k\r2_U.rbpkr_rrna.fq > $k\Rrrna.fq; done &

Goto!
#################
#	04.04.2015	#
#################

Con los datos pareados se realizara el ensamblaje utilizando la herramienta trans-abyss.
Para esto se crea la carpeta "4.4.2015.assembling" dentro de la carpeta "results".
Se ejecuta el siguiente script:

Goto!
#################################
#	14.04.2015 - 17.04.2015	#
################################
By inconvenients with the assembler transabyss, the name of the file have to ends with 1 for forward reads and 2 for reverse reads. So then i use the next 
script to change all the names:

for k in s1 s2 s3 s4 s5 s6 s7a s7b s8a s8b s9a s9b s10a s10b s11a s11b s12a s12b s13a s13b s14a s14b s15a s15b s16a s16b s17a s17b s18a s18b; do mv $k\F.fq $k\_1.fq; done
for k in s1 s2 s3 s4 s5 s6 s7a s7b s8a s8b s9a s9b s10a s10b s11a s11b s12a s12b s13a s13b s14a s14b s15a s15b s16a s16b s17a s17b s18a s18b; do mv $k\R.fq $k\_2.fq; done

Launching proofs of assembling... using the smallest libraries... just for the proof!!

1,6G Apr  4 07:27 s13aF_1.fq
1,6G Apr  4 07:27 s13aR_2.fq
1,6G Apr  4 07:28 s13bF_1.fq
1,5G Apr  4 07:28 s13bR_2.fq

transabyss --se /media/CurrentProjects/latex2015/data/s13a1.fq /media/CurrentProjects/latex2015/data/s13a2.fq --pe /media/CurrentProjects/latex2015/data/s13a1.fq /media/CurrentProjects/latex2015/data/s13a2.fq --name test_se_pe --kmer 37 --threads 4 -c 5 --outdir test_se_pe 2>&1 | tee test_se_pe.log &


transabyss --pe /media/CurrentProjects/latex2015/data/s13a1.fq /media/CurrentProjects/latex2015/data/s13a2.fq --name test_pe --kmer 37 --threads 4 -c 5 --outdir test_pe 2>&1 | tee test_pe.log &


abyss-pe k=37 name=test_abyss_pe -n 5 -j 4 in='/media/CurrentProjects/latex2015/data/s13a1.fq /media/CurrentProjects/latex2015/data/s13a2.fq' 2>&1 | tee test_abyss_pe.log &


transabyss --pe /media/CurrentProjects/latex2015/data/s13aF_1.fq /media/CurrentProjects/latex2015/data/s13aR_2.fq /media/CurrentProjects/latex2015/data/s13bF_1.fq /media/CurrentProjects/latex2015/data/s13bR_2.fq --name test1 --kmer 37 --threads 12 -c 5 2>&1 | tee test1.log

Goto!
#########################
#	20.04.2015	#
#########################

At the end of all proofs, i can realize that transabyss at the begining just make an assembling with abyss and that's it for now... later do the analysis... the nex step. So for now
i will use the abyss-pe command to do all the assemblings, this because i want to assure that uses the PED information. I will use the next command integrating all the libraries, and of course evaluating different kmers, I use large ones because we have lot of information and
minimum coverage for unitigs of 10 -> it means that i need at least a coverage of 10 (10reads) to support a contig. Furthermore this scrips will use up to 14 cores specified by j=14 parameter.

By the way, the folder in which the next script will be executed is: latex2015/results/4.4.2015.assembling/abyss/aby/

Just copy and paste the next script...

for k in 47 49 51 53 57 59 61 65 69 73; do abyss-pe k=$k name=aby_$k n=5 j=14 e=3 c=10 -k lib='pe1 pe2 pe3 pe4 pe5 pe6 pe7a pe7b pe8a pe8b pe9a pe9b pe10a pe10b pe11a pe12a pe13a pe13b pe14a pe14b pe15a pe15b pe16a pe16b pe17a pe17b pe18a pe18b' \
pe1='/media/CurrentProjects/latex2015/data/s1_1.fq /media/CurrentProjects/latex2015/data/s1_2.fq' pe2='/media/CurrentProjects/latex2015/data/s2_1.fq /media/CurrentProjects/latex2015/data/s2_2.fq' \
pe3='/media/CurrentProjects/latex2015/data/s3_1.fq /media/CurrentProjects/latex2015/data/s3_2.fq' pe4='/media/CurrentProjects/latex2015/data/s4_1.fq /media/CurrentProjects/latex2015/data/s4_2.fq' \
pe5='/media/CurrentProjects/latex2015/data/s5_1.fq /media/CurrentProjects/latex2015/data/s5_2.fq' pe6='/media/CurrentProjects/latex2015/data/s6_1.fq /media/CurrentProjects/latex2015/data/s6_2.fq' \
pe7a='/media/CurrentProjects/latex2015/data/s7a_1.fq /media/CurrentProjects/latex2015/data/s7a_2.fq' pe7b='/media/CurrentProjects/latex2015/data/s7b_1.fq /media/CurrentProjects/latex2015/data/s7b_2.fq' \
pe8a='/media/CurrentProjects/latex2015/data/s8a_1.fq /media/CurrentProjects/latex2015/data/s8a_2.fq' pe8b='/media/CurrentProjects/latex2015/data/s8b_1.fq /media/CurrentProjects/latex2015/data/s8b_2.fq' \
pe9a='/media/CurrentProjects/latex2015/data/s9a_1.fq /media/CurrentProjects/latex2015/data/s9a_2.fq' pe9b='/media/CurrentProjects/latex2015/data/s9b_1.fq /media/CurrentProjects/latex2015/data/s9b_2.fq' \
pe10a='/media/CurrentProjects/latex2015/data/s10a_1.fq /media/CurrentProjects/latex2015/data/s10a_2.fq' pe10b='/media/CurrentProjects/latex2015/data/s10b_1.fq /media/CurrentProjects/latex2015/data/s10b_2.fq' \
pe11a='/media/CurrentProjects/latex2015/data/s11a_1.fq /media/CurrentProjects/latex2015/data/s11a_2.fq' pe11b='/media/CurrentProjects/latex2015/data/s11b_1.fq /media/CurrentProjects/latex2015/data/s11b_2.fq' \
pe12a='/media/CurrentProjects/latex2015/data/s12a_1.fq /media/CurrentProjects/latex2015/data/s12a_2.fq' pe12b='/media/CurrentProjects/latex2015/data/s12b_1.fq /media/CurrentProjects/latex2015/data/s12b_2.fq' \
pe13a='/media/CurrentProjects/latex2015/data/s13a_1.fq /media/CurrentProjects/latex2015/data/s13a_2.fq' pe13b='/media/CurrentProjects/latex2015/data/s13b_1.fq /media/CurrentProjects/latex2015/data/s13b_2.fq' \
pe14a='/media/CurrentProjects/latex2015/data/s14a_1.fq /media/CurrentProjects/latex2015/data/s14a_2.fq' pe14b='/media/CurrentProjects/latex2015/data/s14b_1.fq /media/CurrentProjects/latex2015/data/s14b_2.fq' \
pe15a='/media/CurrentProjects/latex2015/data/s15a_1.fq /media/CurrentProjects/latex2015/data/s15a_2.fq' pe15b='/media/CurrentProjects/latex2015/data/s15b_1.fq /media/CurrentProjects/latex2015/data/s15b_2.fq' \
pe16a='/media/CurrentProjects/latex2015/data/s16a_1.fq /media/CurrentProjects/latex2015/data/s16a_2.fq' pe16b='/media/CurrentProjects/latex2015/data/s16b_1.fq /media/CurrentProjects/latex2015/data/s16b_2.fq' \
pe17a='/media/CurrentProjects/latex2015/data/s17a_1.fq /media/CurrentProjects/latex2015/data/s17a_2.fq' pe17b='/media/CurrentProjects/latex2015/data/s17b_1.fq /media/CurrentProjects/latex2015/data/s17b_2.fq' \
pe18a='/media/CurrentProjects/latex2015/data/s18a_1.fq /media/CurrentProjects/latex2015/data/s18a_2.fq' pe18b='/media/CurrentProjects/latex2015/data/s18b_1.fq /media/CurrentProjects/latex2015/data/s18b_2.fq' 2>&1 | tee aby_$k\.log ; done &
 
 
 PD.
 
 this text at the end of the scripts: <2>&1 | tee> means that the output of the program (the verbose or screen anounsments of the program) will go to some file called always <file name>.log 

Goto!
#########################
#	13.05.2015	#
#########################
Now all the assemblings were done. We will use transabyss merge to merge all .fa files to one.


Goto!

#########################
#	22.05.2015	#
#########################
to make select the best abyss assembling i execute:

For unitigs analysis
fac3.pl *3.fa   

For Contigs analysis
fac3.pl *8.fa

best contigs and unitigs with k-mer 57, so to select the best contigs larger than 500pb i had to modify a bit the fasta file doing:

sed 's/ /_/g' ./aby2/aby_57-3.fa > aby_53U.fa

or even:

sed -i 's/ /_/g' ./aby2/aby_57-8.fa

Then i ran the following command to extract the best contigs

sort_contigs.pl -p -m 500 -p -z ./aby2/aby_57-8.fa k57bestC.fa

**
n       n:100  n:N50  min    median    mean     N50      max      sum
882028  408584 80996  100    113      188      182      9223     76.90e6   aby_57-3.fa
843793  379036 57224  100    113      200      193      10392    76.15e6   aby_57-8.fa
23976   23976  6835   406    955      1180     1366     10392    28.31e6   k57bestC.fa
22198   22198  6587   500    788      987      1050     9223     21.91e6   k57bestU.fa
**

So in the new folder: ~/CurrentProjects/latex2015/results/gDE$

I will use this k57bestC to do the diferential expresion job using trinity tools:

making the reference:

/home/unal2/Bin/trinityrnaseq-2.0.6/util/align_and_estimate_abundance.pl --transcripts k57bestC.fa --est_method RSEM --aln_method bowtie --prep_reference 

to calculate the the expression

/home/unal2/Bin/trinityrnaseq-2.0.6/util/align_and_estimate_abundance.pl --transcripts k57bestC.fa --seqType fq --left /media/CurrentProjects/latex2015/data/s1_1.fq --right /media/CurrentProjects/latex2015/data/s1_2.fq --est_method RSEM --aln_method bowtie


Goto!
#########################
#		#
#########################